@charset "utf-8";

/*
 ****************************************************************
 ****************************************************************
   ハンバーガーメニューボタンの、基本的な定義
   ・背景枠
   ・三本線
   　（形状・表示位置・変化速度・表示レイヤーの強度、等々）
 ****************************************************************
 ****************************************************************
 */

/*
 ************************************************
 ************************************************
 * ハンバーガーメニューの背景枠：親要素の設定
 ************************************************
 */
.hamburgerMenuButton {
  /* aタグはインラインにて「高さ・幅」の指定が出来ないので、Blockにする。 */
  display: block;
  height: 40px;
  width:  40px;

  /* background-color: pink; */

  /* 右はじ固定位置に表示 */
  /* 子要素の「position: absolute;」の親に成る。 */
  position: fixed;
  top:   90px;
  right: 20px;

  /*
    当該要素の「transition」時、0.5秒掛けて変化する事を指定。
   */
  transition: 1s;

  /*
    メニュー表示中に、メニューの下にボタンが隠れない様にする。
   */
  z-index: 3;

}
.hamburgerMenuButton:hover {
  cursor: pointer;
}


/*
 ************************************************
 ************************************************
 * ハンバーガーメニューを構成する三本線、個別線の定義
 ************************************************
 */
 .hamburgerMenuButton div {
  height: 2px;
  width : 60%;
  background-color : #333;

  /* メニューの三本線を四角枠の中心に移動する */
  /*「position: absolute」は、通常「position: relative」とセットに使われ、
    「position: relative」を親として左上からの位置を指定出来る。
    「position: absolute」が指定されている要素の親に、
    「position: fixed or absolute」が指定されている場合は、
     その指定が「position: relative」の代わりとなる事が出来る！ */
  position: absolute;

  /*
      メニュー構成３本線（子要素）は、
      第一・第三の線を上下に移動しているので、
      原点は「第二線」の「左端」になる。
      
      親要素の「原点・左上」から、
      子要素の「原点・第二線左端点」を、適切な位置に移動させる。
      左方向移動量は、線分長が「60%」なので、余白合計は「40％」。
      従って、片側余白は「20%」と成る。
   */
  top:  50%;
  left: 20%;

  /* 変換・移す関数「translate(x, y)」呼出すコマンド、 */
  /* 当該要素の中心点を、当該要素の「X方向サイズ、50％」分を、-・左方向に移動する */
  /* transform : translate( -50%, 0 ); *******************/

  /* 
    回転の中心点を、要素の左端に設定する。
    通常の中心点は、要素の中央に有る（X方向:50%, Y方向:50%）ので、
    今回は、X方向を「0%」にして左端に設定する。
   */
  /* transform-origin: 0% 50%; *******************/


  /*
    当該要素の「transition」時、0.5秒掛けて変化する事を指定。
    「ease-out」開始時は早く変化し、終了時は緩やかに変化させる。
   */
  transition: ease-out 0.5s;
}

/*
  「div」が３個並んでいる場合、それぞれをクラスではない方法で指定出来る。
  「nth-of-type(位置)」にて、同じ要素の位置を指定出来る。
    この場合「div」の一番目、
    　　更に「div」の三番目を指定している。
 *
 *
 * 親要素の左上に「メニュー構成３本線が集まって」しまうので、
 * 一番上と一番下の線を、「8px」ずつ上下移動させている。
 */
.hamburgerMenuButton div:nth-of-type(1) {
  transform: translate( 0, -8px );
}
.hamburgerMenuButton div:nth-of-type(3) {
  transform: translate( 0,  8px );
}

/*
 ************************************************
 ************************************************
 * HbMenuクリック後表示する、詳細メニューの定義
 ************************************************
 */
.hamburgerNav {

  /*
   * メニュー本体を、右方向に「110%分ずらして隠して」おく。
   * 「active」になったら、「0%」にして右から引き出す！
   */
  transform: translateX( 110% );

  /*
   * メニューを、各打率「0%」にして隠しておく。
   * 「active」になったら、「100%」にして拡大表示する！
   */
  transform: scale(0);

  /*
   * 変化をさせる場合は、行き成りでなく「0.3秒」掛けて動かす。
   */
  /* transition: 0.5s; */

  position: fixed;
  top: 10%;
  right: 10%;
  font-size: 1em;
  width: 80%;

  /* 「menuButton」高さ分、メニュー文字列を下げる。 */
  padding-top: 50px;
  padding-bottom: 30px;

  /*
    メニュー表示中に、メニューの下にボタンが隠れない様にする。
   */
  z-index: 2;

  /*
    メニュー表示数が多い場合に、スクロール機能を付ける。
    スクロール機能を付ける場合には、高さ指定が必要！
    ここでは、ブラウザ高さにしておく。
   */
  max-height: 100vh;
  overflow: auto;

  color: white;
  background-color: rgba(85,121,155,1);

  box-shadow: 6px 6px 12px rgb(198, 198, 198);
  border-radius: 5px;
  transition-duration: 1s;
}

.hamburgerNav ul {
  display: flex;              /* 要素、横並び */
  flex-direction: column;     /* 要素、並ぶ方向を縦方向に。 */
  /* align-items: center; */
  /* justify-content: center; */
  padding-left: 10%;
  height: 100%;               /* 親の「nav」の高さを考慮する */
}
/*
  メニュー間隔を「margin-top」で開ける。
「first-of-type」は「nth-of-type(1)」と同意であり、
「li」要素の一番上を示し、これに「not:」が付いて居るので、
「li」要素の一番上には適用しない、事を指示している。
 */
.hamburgerNav ul li:not( :first-of-type ) {
  margin-top: 10px;
}
.hamburgerNav ul li:hover {
  color: yellow;
}

/* 
 * メニュー表示時の、ホバー状態時下線アニメーション表示実装
 ******************************************************
 */
#hamburgerNav a {
  display: inline-block;
  line-height: 1.5em;
  position: relative;
  overflow: hidden;
  text-decoration: none;
}
#hamburgerNav a:after {
  position: absolute;
  bottom: 0;
  left: 0;
  width: 100%;
  height: 1px;
  background-color: white;
  transform: translate(-100%, 0);
  transition: transform 500ms;
  transition: transform cubic-bezier(0.215, 0.61, 0.355, 1) 0.4s;
  content: "";
}
#hamburgerNav a:hover:after {
  transform: translate(0, 0);
}
/*******************************************************/

/*
 ************************************************
 ************************************************
 *   HbMenuクリック後表示「詳細メニュー」表示中に表示の、
 * 「ブラックアウトマスク」の定義
 ************************************************
 */
 .mask {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: black;
  opacity: 0;
/*
 *「Display」でも不可視に出来るが、こちらだと「Animate」させられない。
 * 表示に効果を付けたい場合には、「visibility」を用いる。
 */
  visibility: hidden;

/*
 * レイヤー順を管理し、メインコンテンツのイベントを排除している。
 */
  z-index: 1;

/*
 * マスクを掛ける動きをソフトにする。
 */
  transition: 0.5s;

}


/*
 ****************************************************************
 ****************************************************************
   menuButtonクラスに、「active」と言うクラスが付いた時に、
   下記の設定が有効と成る。
 ****************************************************************
 ****************************************************************
 */

/*
 * menuButton自体を回転させる変化を付ける。
 */
.hamburgerMenuButton.active {
  transform: rotate( -270deg );
}

/*
 * 》一本目・上の線は、45度傾けて、✖印を構成させる。
 * 》真ん中の線・日本目の線は、消す・見えなくする。
 * 》三本目・下の線も、45度傾けて、一本目と併せて✖印を構成させる。
 */
.hamburgerMenuButton.active div:nth-of-type(1) {
  /* transform: rotate( 45deg ) translate( -50%, 0% ); */
  transform: rotate( 45deg );
  background-color: #fff;
}
.hamburgerMenuButton.active div:nth-of-type(2) {
  /*
    真ん中の線が、左に抜けていくパターン
   ***********************************/
  opacity: 0;
  transform: translate( -100%, -50% );
  /***********************************/
  /*
    ✖マークの廻りに円を描くパターン
   ***********************************
  transform : translate( -50%, -50% );
  width: 100%;
  height: 100%;
  border: 3px solid #333;
  background-color: transparent; * 背景色透明 *
  border-radius: 50%;
   ***********************************/
}
.hamburgerMenuButton.active div:nth-of-type(3) {
  transform: rotate( -45deg );
  background-color: #fff;
}

/*
 ****************************************************************
 ****************************************************************
   navクラスに、「active」と言うクラスが付いた時に、
   下記の設定が有効と成る。
 ****************************************************************
 ****************************************************************
 */
.hamburgerNav.active {
  /* opacity: 1;
  visibility: visible; */
  
  /*
   * メニューを、右方向に「100%」分ずらして隠してあったメニューを、
   * 「0%」に変更し、引き出し表示する。
   */
  transform: translateX( 0% );

  transform: scale(1);
}

/*
 ****************************************************************
 ****************************************************************
   「ブラックアウトマスク」に、「active」と言うクラスが付いた時に、
   下記の設定が有効と成る。
 ****************************************************************
 ****************************************************************
 */
.mask.active {
  opacity: 0.5;
  visibility: visible;
}

/* .slideshowFlame.active {
  display: none;
} */